<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/8/16
 * Time: 20:05
 */

namespace app\wap\controller;


class Connect extends MobileMall
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    /**
     * 新浪微博登陆
     */
    public function get_sina_oauth2() {
        $this->redirect('api/oa_sina');
    }

    /**
     * QQ登陆
     */
    public function get_qq_oauth2() {
        $this->redirect('api/oa_qq');
    }


    /**
     * 短信动态码
     */
    public function get_sms_captcha(){
        $state = '发送失败';
        $phone = input('post.mobile');
        
        if (preg_match('/^1(3|5|7|8|4|6)[0-9]{9}$/i', $phone)){
            $model_member = Model('member');
            $member = $model_member->getMemberInfo(array('member_mobile'=> $phone));

            $log_type = input('post.type');;//短信类型:1为注册,2为登录,3为找回密码
            if ($log_type !=3) {
                if (!$member) {
                    $log_type = 1 ;
                }else{
                    $log_type = 2 ;
                }
            }
            $model_sms_log = Model('smslog');
            $condition = array();
            $condition['log_ip'] = getIp();
            $condition['log_type'] = $log_type;
            $sms_log = $model_sms_log->getSmsInfo($condition);
            if(!empty($sms_log) && ($sms_log['add_time'] > TIMESTAMP-1)) {//同一IP十分钟内只能发一条短信
                $state = '同一IP地址一分钟内，请勿多次获取动态码！';
            } else {
                $state = 'true';
                $log_array = array();                
                $captcha = rand(100000, 999999);
                $log_msg = '【'.config('site_name').'】您于'.date("Y-m-d");

                $sms_tpl = config('sms_tpl'); 
                               
                switch ($log_type) {
                    case '1':
                        if(config('sms_register') != 1) {
                            $state = '系统没有开启手机注册功能';
                        }
                        $type = 'sms_register';
                        $log_msg .= '申请注册会员，动态码：'.$captcha.'。';
                        $tempId = $sms_tpl['sms_register'];
                        break;
                    case '2':
                        if(config('sms_login') != 1) {
                            $state = '系统没有开启手机登录功能';
                        }
                        if(empty($member)) {//检查手机号是否已绑定会员
                            $state = '当前手机号未注册，请检查号码是否正确。';
                        }
                        $type = 'sms_login';
                        $log_msg .= '申请登录，动态码：'.$captcha.'。';
                        $log_array['member_id'] = $member['member_id'];
                        $log_array['member_name'] = $member['member_name'];
                        $tempId = $sms_tpl['sms_login'];
                        break;
                    case '3':
                        if(config('sms_password') != 1) {
                            $state = '系统没有开启手机找回密码功能';
                        }
                        $type = 'sms_password';
                        $log_msg .= '申请重置登录密码，动态码：'.$captcha.'。';
                        $log_array['member_id'] = $member['member_id'];
                        $log_array['member_name'] = $member['member_name'];
                        $tempId = $sms_tpl['sms_password'];
                        break;
                    default:
                        $state = '参数错误';
                        break;
                }
                if($state == 'true'){
                    $sms = new \sendmsg\Sms();
                    $result = $sms->send($phone,$log_msg,$captcha);
                    if($result){
                        $log_array['log_phone']   = $phone;
                        $log_array['log_captcha'] = $captcha;
                        $log_array['log_ip']      = getIp();
                        $log_array['log_msg']     = $log_msg;
                        $log_array['log_type']    = $log_type;
                        $log_array['add_time']    = time();
                        $model_sms_log->addSms($log_array);
                        output_data(array('sms_time'=>10,'type'=>$type));exit;
                    } else {
                        $state = '手机短信发送失败';
                    }
                }
            }
        }else{
            $state='请输入正确的手机号码！';
        }
        output_error($state);
    }
    /**
     * 验证注册动态码
     */
    public function check_sms_captcha(){
        $state = '验证失败';
        $phone = input('post.mobile');
        $captcha = input('post.captcha');
        $log_type = input('post.log_type');
        switch ($log_type) {
            case 'sms_register':
                $log_type=1;
                break;
            case 'sms_login':
                $log_type=2;
                break;
            case 'sms_password':
                $log_type=3;
                break;       
        }
        if (preg_match('/^1(3|5|7|8|4|6)[0-9]{9}$/i', $phone)){
            $state = 'true';
            $condition = array();
            $condition['log_phone'] = $phone;
            $condition['log_captcha'] = $captcha;
            $condition['log_type'] = $log_type;
            $model_sms_log = Model('smslog');
            $sms_log = $model_sms_log->getSmsInfo($condition);
            if(empty($sms_log) || ($sms_log['add_time'] < TIMESTAMP-1800)) {//半小时内进行验证为有效
                $state = '动态码错误或已过期，重新输入';
                output_error(array('type'=>input('post.log_type'),'msg'=>$state));
            }
            output_data(array('status'=>$state));
        }
        output_error($state);
    }


    /**
     * 找回密码
     */
    public function find_password_ww(){
        if(config('sms_password') != 1) {
            output_error('系统没有开启手机找回密码功能','','error');
        }
        $phone = $_POST['phone'];
        $captcha = $_POST['captcha'];
        $condition = array();
        $condition['log_phone'] = $phone;
        $condition['log_captcha'] = $captcha;
        $condition['log_type'] = 3;
        $model_sms_log = Model('sms_log');
        $sms_log = $model_sms_log->getSmsInfo($condition);
        if(empty($sms_log) || ($sms_log['add_time'] < TIMESTAMP-1800)) {//半小时内进行验证为有效
            output_error('动态码错误或已过期，重新输入','','error');
        }
        $model_member = Model('member');
        $member = $model_member->getMemberInfo(array('member_mobile'=> $phone));//检查手机号是否已被注册
        if(!empty($member)) {
            $new_password = md5($_POST['password']);
            $model_member->editMember(array('member_id'=> $member['member_id']),array('member_password'=> $new_password));

            $token = $this->_get_token($member['member_id'], $member['member_name'], $_POST['client']);
            if($token) {
                output_data(array('username' => $member_info['member_name'], 'key' => $token));
            }
        }

        output_error($state);
    }

    /**
     * 手机注册
     */
    public function sms_register(){
        $phone = $_POST['phone'];
        $captcha = $_POST['captcha'];
        $password = $_POST['password'];
        $client = $_POST['client'];
        $logic_connect_api = model('connectapi','logic');
        $state_data = $logic_connect_api->smsRegister($phone, $captcha, $password, $client);

        if($state_data['state']=='1'){
            output_data($state_data);
        } else {
            output_error($state_data['msg']);
        }
    }


    /**
     * 手机找回密码
     */
    public function find_password(){
        $phone = $_POST['phone'];
        $captcha = $_POST['captcha'];
        $password = $_POST['password'];
        $client = $_POST['client'];
        $logic_connect_api = model('connectapi','logic');
        $state_data = $logic_connect_api->smsPassword($phone, $captcha, $password, $client);
        $this->connect_output_data($state_data);
    }

    /**
     * 格式化输出数据
     */
    private function connect_output_data($state_data, $type = 0){
        if($state_data['state']){
            unset($state_data['state']);
            unset($state_data['msg']);
            if ($type == 1){
                $state_data = 1;
            }
            output_data($state_data);
        } else {
            output_error($state_data['msg']);
        }
    }

    /**
     * 登录开关状态
     */
    public function get_state() {
        $logic_connect_api = model('connectapi','logic');
        $state_array = $logic_connect_api->getStateInfo();

        $key = $_GET['t'];
        if(trim($key) != '' && array_key_exists($key,$state_array)){
            output_data($state_array[$key]);
        } else {
            output_data($state_array);
        }
    }

    /**
     * 登录生成token
     */
    private function _get_token($member_id, $member_name, $client) {
        $model_mb_user_token = Model('mb_user_token');

        //生成新的token
        $mb_user_token_info = array();
        $token = md5($member_name . strval(TIMESTAMP) . strval(rand(0,999999)));
        $mb_user_token_info['member_id'] = $member_id;
        $mb_user_token_info['member_name'] = $member_name;
        $mb_user_token_info['token'] = $token;
        $mb_user_token_info['login_time'] = TIMESTAMP;
        $mb_user_token_info['client_type'] = $client;

        $result = $model_mb_user_token->addMbUserToken($mb_user_token_info);

        if($result) {
            return $token;
        } else {
            return null;
        }

    }

}