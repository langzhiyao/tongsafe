<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/8/16
 * Time: 20:12
 */

namespace app\wap\controller;
vendor('qiniu.autoload');
use Qiniu\Auth as Auth;
use Qiniu\Storage\BucketManager;
use Qiniu\Storage\UploadManager;


class Teacherupload extends MobileMember
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    //上传课件提交
    public function index(){
        $member_id = intval(input('post.member_id'));
        if(empty($member_id)){
            output_error('会员id不能为空');
        }
        $member_identity = db('member')->field('member_identity,member_mobile')->where(array('member_id'=>$member_id))->find();
        if($member_identity['member_identity']!=2){
            output_error('该会员未认证教师身份，无法上传课件');
        }
        $teachchild = model('Teachchild');
        $condition = array();
        $condition['t_title'] = trim(input('post.title'));
        $condition['t_profile'] = trim(input('post.profile'));
        $condition['t_price'] = trim(input('post.price'));
        $condition['t_author'] = trim(input('post.author'));
        $condition['t_type'] = trim(input('post.type'));
        $condition['t_type2'] = trim(input('post.type2'));
        $condition['t_type3'] = trim(input('post.type3'));
        $condition['t_type4'] = trim(input('post.type4'));
        $condition['t_url'] = input('post.url') ? input('post.url'):"";
        $condition['t_videoimg'] = input('post.pic') ? input('post.pic'):"";
        $condition['t_timelength'] = input('post.time') ? input('post.time'):"";
        $condition['t_userid']=$member_id;
        $condition['member_mobile'] = $member_identity['member_mobile'];
        $condition['t_maketime'] = time();
        $condition['t_audit'] = 1;
        $condition['t_del'] = 1;

        if (empty($condition['t_type'])) output_error('类别至少选一级');
        if (empty($condition['t_title'])) output_error('标题不能为空');
        if (empty($condition['t_profile'])) output_error('简介不能为空');
        if (empty($condition['t_price'])) output_error('价格不能为空');
        //if (!isset($_FILES['video_file'])) output_error('视频不能为空');

        //上传视频
        if(isset($_FILES['video_file'])){
            $videoData = $this->video($_FILES);
            $condition['t_url'] = $videoData['path'];//视频路径
            $condition['t_videoimg'] = $videoData['pic'];//默认封面图
            $condition['t_timelength'] = $videoData['time'];//视频时长
        }

        $result=$teachchild->addTeachchild($condition);
        if($result){
            $data[] = array('message'=>'上传成功','data'=>$condition);
            output_data($data);
        }else{
            output_error('上传失败');
        }

    }

    /*
     * 上传视频
     * 保存在七牛云上
     * */
    public function video($data){
        //获取文件的名字
        $key = $data['video_file']['name'];
        $filePath=$data['video_file']['tmp_name'];
        //获取token值
        $accessKey = 'V0Su976FmQMUBKKf9TLZIYao34G-l6RN_7zxhfFV';
        $secretKey = 'xvVkqpveV8myyeHYP4c_tghcPRUKUmvc2EqbOumG';
        $WAILIAN='pgj4a41j8.bkt.clouddn.com';
        // 初始化签权对象
        $auth = new Auth($accessKey, $secretKey);
        $bucket = 'avatar';
        // 生成上传Token
        $token = $auth->uploadToken($bucket);
        $uploadMgr = new UploadManager();
        // 调用 UploadManager 的 putFile 方法进行文件的上传。
        list($ret, $err) = $uploadMgr->putFile($token, $key, $filePath);
        // 获取视频的时长
        // 第一步先获取到到的是关于视频所有信息的json字符串
        $shichang = file_get_contents('http://'.$WAILIAN.'/'.$key.'?avinfo');
        // 第二部转化为对象
        $shi =json_decode($shichang);
        // 第三部从中取出视频的时长
        $chang = $shi->format->duration;
        // 获取封面
        $vpic = 'http://'.$WAILIAN.'/'.$key.'?vframe/jpg/offset/1';
        $path ='http://'.$WAILIAN.'/'.$ret['key'];
        $data = [
            'path' => $path,
            'pic' =>$vpic,
            'time'=>$chang,
        ];
        return $data;
    }

}